/*!
* Publisher – Javascript Pub/Sub library
* @license MIT
* © 2013–2025 Frank Kudermann @ alphanull
*/
const e={async:!0,handleExceptions:!1,lenientUnsubscribe:!1},i=new Map,n=new Map,o=new Map;let t=-1;function s(i){if(!i)throw new Error("Publisher configure: no options specified");void 0!==i.async&&(e.async=i.async),void 0!==i.handleExceptions&&(e.handleExceptions=i.handleExceptions),void 0!==i.lenientUnsubscribe&&(e.lenientUnsubscribe=i.lenientUnsubscribe)}function r(i,t,s={}){if(!0===s.persist&&o.set(i,{data:t,options:s}),i.indexOf("*")>-1)throw new Error("Publish topic cannot contain any wildcards.");const r=p(i.split("/"),t,s,n,i);let c;r.sort(((e,i)=>e.priority===i.priority?e.position-i.position:e.priority>i.priority?-1:1));const a=void 0===s.async?e.async:s.async;for(;c=r.shift();)if(a)setTimeout(d.bind(null,c,i,t,s),0);else if(!1===d(c,i,t,s)&&!1!==s.cancelable)return!1}function c(s,r,c={}){const a=t+=1;if(void 0===s)throw new Error('Subscribe failed - "undefined" Topic.');if(s.includes("undefined"))throw new Error(`Subscribe for '${s}' failed - found 'undefined' in topic, this is almost always an error: ${a}`);if(void 0===r)throw new Error(`Subscribe for '${s}' failed - "undefined" Handler`);const l={token:a,topic:s,handler:r,options:c};if(i.set(a,l),f(s.split("/"),l,n),!0!==c.persist)return a;const p=new RegExp(`^${s.replace("*","(.+)")}(/.+)?$`);for(const[i,n]of o){if(i.match(p)){if(void 0===n.options.async?e.async:n.options.async)setTimeout(d.bind(null,l,i,n.data,c),0);else if(!1===d(l,i,n.data,c)&&!0===c.cancelable)break}}return a}function a(o,t,s){const r=t===Boolean(t)?t:s,c=void 0===r?e.lenientUnsubscribe:r,a=e=>{const o=i.get(e);if(void 0===o){if(!0===c)return;throw new Error(`Unsubscribe failed. Did not find subscriber for token: ${e}`)}u(o.topic.split("/"),o,n),i.delete(e)};if(void 0===o){if(!0===c)return;throw new Error("Unsubscribe failed. No Arguments specified.")}if(Array.isArray(o))o.forEach((e=>a(e)));else if(!isNaN(parseFloat(o))&&isFinite(o))a(o);else{if(void 0===t){if(!0===c)return;throw new Error(`Unsubscribe failed. No handler for topic based unsubscribe specified ${o}`)}for(const[,e]of i)if(e.handler===t&&e.topic===o){u(o.split("/"),e,n),i.delete(e.token);break}}}function l(e){o.delete(e)}function d(n,o,t,s={}){if(!i.has(n.token))return;n.options.invocations>0&&(n.options.invocations-=1,n.options.invocations<=0&&a(n.token));const{handler:r}=n;if(!0!==s.handleExceptions&&!0!==e.handleExceptions)return r(t,o);try{return r(t,o)}catch(e){window.console&&window.console.error&&window.console.error("Exception while executing publish handler: ",e)}}function p(i,n,o={},t,s,r=[]){const c=t.get("subscribers")||new Map,a=t.get("topics");for(const[,i]of c){const{condition:t}=i.options;(void 0===t||"[object Function]"===Object.prototype.toString.call(t)&&!0===t(n,s))&&(i.position=r.push(i),i.priority=i.options.priority||0,i.async=Boolean(o.async||i.options.async||e.async))}if(i.length&&a){const e=a.get(i[0]),t=a.get("*");void 0===t&&void 0===e||(void 0!==t&&p(i.slice(1,i.length),n,o,t,s,r),void 0!==e&&p(i.slice(1,i.length),n,o,e,s,r),i.shift())}return r}function f(e,i,n){const[o]=e;void 0===n.get("topics")&&n.set("topics",new Map);const t=n.get("topics");let s=t.get(o);void 0===s&&(s=new Map,t.set(o,s)),e.length<2?(void 0===s.get("subscribers")&&s.set("subscribers",new Map),s.get("subscribers").set(i.token,i)):(e.shift(),f(e,i,s))}function u(e,i,n){const[o]=e,t=n.get("topics"),s=t.get(o),r=s.get("subscribers");e.length<2?(r.delete(i.token),0===r.size&&s.delete("subscribers")):(e.shift(),u(e,i,s)),s.has("topics")&&0===s.get("topics").size&&s.delete("topics"),0===t.get(o).size&&t.delete(o)}export{s as configure,r as publish,l as removePersistentMessage,c as subscribe,a as unsubscribe};
